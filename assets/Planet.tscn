[gd_scene load_steps=21 format=2]

[ext_resource path="res://textures/planets/exotic.png" type="Texture" id=1]
[ext_resource path="res://scripts/planet.gd" type="Script" id=2]
[ext_resource path="res://assets/PlanetShadeTop.tscn" type="PackedScene" id=3]

[sub_resource type="ShaderMaterial" id=3]

[sub_resource type="CircleShape2D" id=1]
resource_local_to_scene = true
radius = 3.5

[sub_resource type="VisualShaderNodeVectorOp" id=18]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=19]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeTexture" id=20]
source = 1

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeSwitch" id=24]

[sub_resource type="VisualShaderNodeBooleanUniform" id=25]
uniform_name = "isNight"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeTexture" id=10]
source = 2

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=15]
uniform_name = "planet"
texture_type = 1

[sub_resource type="VisualShaderNodeVectorFunc" id=22]
function = 34

[sub_resource type="VisualShaderNodeColorConstant" id=23]
constant = Color( 0.00392157, 0.0862745, 0.121569, 1 )

[sub_resource type="VisualShader" id=16]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform sampler2D planet : hint_albedo;
uniform bool isNight = true;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// TextureUniform:6
	vec3 n_out6p0;
	float n_out6p1;
	{
		vec4 n_tex_read = texture(planet, UV.xy);
		n_out6p0 = n_tex_read.rgb;
		n_out6p1 = n_tex_read.a;
	}

// VectorOp:5
	vec3 n_out5p0 = n_out3p0 * n_out6p0;

// VectorFunc:8
	vec3 n_out8p0 = vec3(1.0, 1.0, 1.0) - n_out5p0;

// BooleanUniform:15
	bool n_out15p0 = isNight;

// Color:9
	vec3 n_out9p0 = vec3(0.003922, 0.086274, 0.121569);
	float n_out9p1 = 1.000000;

// Input:13
	vec3 n_out13p0 = vec3(SCREEN_UV, 0.0);

// Texture:12
	vec3 n_out12p0;
	float n_out12p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out13p0.xy, 0.0);
		n_out12p0 = _tex_read.rgb;
		n_out12p1 = _tex_read.a;
	}

// VectorSwitch:14
	vec3 n_out14p0;
	if(n_out15p0)
	{
		n_out14p0 = n_out9p0;
	}
	else
	{
		n_out14p0 = n_out12p0;
	}

// VectorOp:10
	vec3 n_out10p0 = n_out8p0 * n_out14p0;

// VectorOp:11
	vec3 n_out11p0 = n_out5p0 + n_out10p0;

// Output:0
	COLOR.rgb = n_out11p0;
	COLOR.a = n_out6p1;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -266.287, 58.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1240, 280 )
nodes/fragment/3/node = SubResource( 10 )
nodes/fragment/3/position = Vector2( -600, -100 )
nodes/fragment/5/node = SubResource( 12 )
nodes/fragment/5/position = Vector2( -280, 220 )
nodes/fragment/6/node = SubResource( 15 )
nodes/fragment/6/position = Vector2( -860, 260 )
nodes/fragment/8/node = SubResource( 22 )
nodes/fragment/8/position = Vector2( -20, 500 )
nodes/fragment/9/node = SubResource( 23 )
nodes/fragment/9/position = Vector2( -400, 660 )
nodes/fragment/10/node = SubResource( 18 )
nodes/fragment/10/position = Vector2( 340, 680 )
nodes/fragment/11/node = SubResource( 19 )
nodes/fragment/11/position = Vector2( 400, 200 )
nodes/fragment/12/node = SubResource( 20 )
nodes/fragment/12/position = Vector2( -840, 740 )
nodes/fragment/13/node = SubResource( 21 )
nodes/fragment/13/position = Vector2( -1240, 820 )
nodes/fragment/14/node = SubResource( 24 )
nodes/fragment/14/position = Vector2( -80, 900 )
nodes/fragment/15/node = SubResource( 25 )
nodes/fragment/15/position = Vector2( -660, 1080 )
nodes/fragment/connections = PoolIntArray( 6, 0, 5, 1, 5, 0, 8, 0, 8, 0, 10, 0, 5, 0, 11, 0, 10, 0, 11, 1, 11, 0, 0, 0, 13, 0, 12, 0, 12, 0, 14, 2, 15, 0, 14, 0, 3, 0, 5, 0, 14, 0, 10, 1, 9, 0, 14, 1, 6, 1, 0, 1 )

[sub_resource type="ShaderMaterial" id=26]
resource_local_to_scene = true
shader = SubResource( 16 )
shader_param/isNight = true
shader_param/planet = ExtResource( 1 )

[sub_resource type="Environment" id=8]

[sub_resource type="World" id=27]
environment = SubResource( 8 )

[node name="Planet" type="Sprite"]
material = SubResource( 3 )
script = ExtResource( 2 )

[node name="Area2D" type="Area2D" parent="."]
collision_mask = 2

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 1 )

[node name="ViewportContainer" type="ViewportContainer" parent="."]
material = SubResource( 26 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -7.0
margin_top = -7.0
margin_right = 7.0
margin_bottom = 7.0
mouse_filter = 2
stretch = true

[node name="Viewport" type="Viewport" parent="ViewportContainer"]
size = Vector2( 14, 14 )
own_world = true
world = SubResource( 27 )
transparent_bg = true
handle_input_locally = false
render_target_update_mode = 3

[node name="Spatial" parent="ViewportContainer/Viewport" instance=ExtResource( 3 )]

[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
